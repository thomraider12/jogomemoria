const themes = {
    emoji: ["üçé", "üçé", "üçå", "üçå", "üçí", "üçí", "üçá", "üçá", "üçâ", "üçâ", "üçì", "üçì", "ü•ù", "ü•ù", "üçç", "üçç"],
    animals: ["üê∂", "üê∂", "üê±", "üê±", "üê∞", "üê∞", "ü¶ä", "ü¶ä", "üêª", "üêª", "üêº", "üêº", "üê®", "üê®", "üêØ", "üêØ"],
    flags: ["üáµüáπ", "üáµüáπ", "üáßüá∑", "üáßüá∑", "üá∫üá∏", "üá∫üá∏", "üá´üá∑", "üá´üá∑", "üá©üá™", "üá©üá™", "üáØüáµ", "üáØüáµ", "üá®üá≥", "üá®üá≥", "üáÆüá≥", "üáÆüá≥"],
  };
  
  let cards = [];
  let flippedCards = [];
  let matchedCards = [];
  let moveCount = 0;
  let timer;
  let startTime;
  let currentTheme = "emoji";
  
  // Fun√ß√£o para embaralhar as cartas
  function shuffle(array) {
    for (let i = array.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [array[i], array[j]] = [array[j], array[i]];
    }
    return array;
  }
  
  // Fun√ß√£o para criar o tabuleiro do jogo
  function createBoard() {
    const gameBoard = document.getElementById("game-board");
    gameBoard.innerHTML = "";
    const shuffledCards = shuffle([...cards]);
  
    shuffledCards.forEach((card, index) => {
      const cardElement = document.createElement("div");
      cardElement.classList.add("card", "bg-white", "rounded-lg", "cursor-pointer", "h-24", "w-24", "shadow-md", "hover:shadow-lg");
  
      const cardInner = document.createElement("div");
      cardInner.classList.add("card-inner");
  
      const cardFront = document.createElement("div");
      cardFront.classList.add("card-front", "bg-gray-200", "rounded-lg", "flex", "items-center", "justify-center", "text-4xl");
      cardFront.textContent = "‚ùì";
  
      const cardBack = document.createElement("div");
      cardBack.classList.add("card-back", "rounded-lg", "flex", "items-center", "justify-center", "text-4xl");
      cardBack.textContent = card;
  
      cardInner.appendChild(cardFront);
      cardInner.appendChild(cardBack);
      cardElement.appendChild(cardInner);
      cardElement.dataset.index = index;
      cardElement.addEventListener("click", flipCard);
      gameBoard.appendChild(cardElement);
    });
  }
  
  // Fun√ß√£o para virar uma carta
  function flipCard() {
    const card = this;
  
    if (flippedCards.length < 2 && !flippedCards.includes(card) && !card.classList.contains("matched")) {
      card.classList.add("flipped");
      flippedCards.push(card);
  
      if (flippedCards.length === 2) {
        moveCount++;
        document.getElementById("move-counter").textContent = `Movimentos: ${moveCount}`;
        setTimeout(checkForMatch, 500);
      }
    }
  }
  
  // Fun√ß√£o para verificar se as cartas viradas s√£o iguais
  function checkForMatch() {
    const [card1, card2] = flippedCards;
  
    if (card1.querySelector(".card-back").textContent === card2.querySelector(".card-back").textContent) {
      card1.classList.add("matched");
      card2.classList.add("matched");
      matchedCards.push(card1, card2);
  
      if (matchedCards.length === cards.length) {
        clearInterval(timer);
        document.getElementById("result").textContent = "Parab√©ns! Ganhaste o jogo!";
        document.getElementById("reset-button").classList.remove("hidden");
      }
    } else {
      card1.classList.remove("flipped");
      card2.classList.remove("flipped");
    }
  
    flippedCards = [];
  }
  
  // Fun√ß√£o para reiniciar o jogo
  function resetGame() {
    clearInterval(timer);
    flippedCards = [];
    matchedCards = [];
    moveCount = 0;
    document.getElementById("move-counter").textContent = "Movimentos: 0";
    document.getElementById("result").textContent = "";
    document.getElementById("reset-button").classList.add("hidden");
    document.getElementById("timer").textContent = "Tempo: 00:00";
    startTimer();
    createBoard();
  }
  
  // Fun√ß√£o para iniciar o temporizador
  function startTimer() {
    startTime = Date.now();
    timer = setInterval(() => {
      const elapsedTime = Math.floor((Date.now() - startTime) / 1000);
      const minutes = Math.floor(elapsedTime / 60);
      const seconds = elapsedTime % 60;
      document.getElementById("timer").textContent = `Tempo: ${String(minutes).padStart(2, "0")}:${String(seconds).padStart(2, "0")}`;
    }, 1000);
  }
  
  // Fun√ß√£o para mudar o tema
  function changeTheme(theme) {
    currentTheme = theme;
    cards = themes[theme];
    resetGame();
  }
  
  // Inicia o jogo ao carregar a p√°gina
  document.addEventListener("DOMContentLoaded", () => {
    cards = themes[currentTheme];
    createBoard();
    startTimer();
  });
  
  // Adiciona eventos aos bot√µes de tema
  document.getElementById("theme-emoji").addEventListener("click", () => changeTheme("emoji"));
  document.getElementById("theme-animals").addEventListener("click", () => changeTheme("animals"));
  document.getElementById("theme-flags").addEventListener("click", () => changeTheme("flags"));
  
  // Adiciona evento ao bot√£o de reiniciar
  document.getElementById("reset-button").addEventListener("click", resetGame);